// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class Storage extends ethereum.SmartContract {
  static bind(address: Address): Storage {
    return new Storage("Storage", address);
  }

  i(): BigInt {
    let result = super.call("i", "i():(uint256)", []);

    return result[0].toBigInt();
  }

  try_i(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("i", "i():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class IncrementCall extends ethereum.Call {
  get inputs(): IncrementCall__Inputs {
    return new IncrementCall__Inputs(this);
  }

  get outputs(): IncrementCall__Outputs {
    return new IncrementCall__Outputs(this);
  }
}

export class IncrementCall__Inputs {
  _call: IncrementCall;

  constructor(call: IncrementCall) {
    this._call = call;
  }

  get x(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class IncrementCall__Outputs {
  _call: IncrementCall;

  constructor(call: IncrementCall) {
    this._call = call;
  }
}
